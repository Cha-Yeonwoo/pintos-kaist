Kernel command line: -q -f put lazy-file put sample.txt put small.txt run lazy-file
0 ~ 9fc00 1
100000 ~ 13e0000 1
Pintos booting with: 
	base_mem: 0x0 ~ 0x9fc00 (Usable: 639 kB)
	ext_mem: 0x100000 ~ 0x13e0000 (Usable: 19,328 kB)
Calibrating timer...  156,262,400 loops/s.
hd0:0: detected 353 sector (176 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 20,160 sector (9 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 151 sector (75 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'lazy-file' into the file system...
Putting 'sample.txt' into the file system...
Putting 'small.txt' into the file system...
Executing 'lazy-file':
(lazy-file) begin
(lazy-file) open "small.txt"
(lazy-file) sizeof small: 10017
(lazy-file) page aligned size of small: 12288
(lazy-file) mmap "small.txt"
(lazy-file) initial pages status
(lazy-file) check if page is not loaded
(lazy-file) check if page is not loaded
(lazy-file) check if page is not loaded
(lazy-file) load pages (3)
(lazy-file) load page [0]
(lazy-file) check if page is loaded
(lazy-file) check if page is not loaded
(lazy-file) check if page is not loaded
(lazy-file) load page [1]
(lazy-file) check if page is loaded
(lazy-file) check if page is loaded
(lazy-file) check if page is not loaded
(lazy-file) load page [2]
(lazy-file) check if page is loaded
(lazy-file) check if page is loaded
(lazy-file) check if page is loaded
Page fault at 0x10: not present error writing page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at rip=80042230f7
 cr2=0000000000000010 error=               2
rax 0000000000000008 rbx 000000004747fef8 rcx 0000000000000000 rdx 0000000000000000
rsp 0000008004245cc0 rbp 0000008004245cf0 rsi 0000008004245060 rdi 0000000000000001
rip 00000080042230f7 r8 0000000000000001  r9 0000000000000000 r10 0000000000000000
r11 0000000000000212 r12 000000800421f7b7 r13 0000000000000200 r14 00008004245f0000
r15 0000800422bb0000 rflags 00000246
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC at ../../userprog/exception.c:97 in kill(): Kernel bug - unexpected interrupt in kernel
Call stack: 0x8004218cff 0x800421e1b2 0x800421e3af 0x80042098c7 0x8004209ce5 0x8004223607 0x800421e2d1 0x80042098c7 0x8004209ce5 0x800421fcc2 0x800421fabd 0x800421e42b 0x4004d7 0x400f9f 0x400fe8 0Interrupt 0x0d (#GP General Protection Exception) at rip=8004215d39
 cr2=0000000000000010 error=               0
rax 00008004208a3a00 rbx 000000004747fef8 rcx 00000080040b8000 rdx 00000000000003d4
rsp 0000008004245ab0 rbp 0000008004245ac0 rsi 000000000000a40f rdi 0000000000000000
rip 0000008004215d39 r8 00000080042459c8  r9 000000800421c178 r10 0000000000000000
r11 0000000000000212 r12 000000800421f7b7 r13 0000000000000200 r14 00008004245f0000
r15 0000800422bb0000 rflags 00000006
es: 0010 ds: 0010 cs: 0008 ss: 0010
Kernel PANIC recursion at ../../userprog/exception.c:97 in kill().
Timer: 4781 ticks
Thread: 35 idle ticks, 50 kernel ticks, 4696 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 183 reads, 350 writes
hd1:0: 151 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 3199 characters output
Key